services:
  web:
    build: ./client
    container_name: client
    ports:
      - 5173:5173
    depends_on:
      db-postgres:
        condition: service_healthy
    command: ["npm", "run", "dev"]

  server:
    build: ./server
    container_name: server
    ports:
      - 3000:3000
    depends_on:
      db-postgres:
        condition: service_healthy
      db-redis:
        condition: service_started
    command: ["./vend-server"]

  db-redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
  db-postgres:
    image: postgres
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: vending_machine
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - db_password

  adminer:
    image: adminer
    restart: always
    depends_on:
      db-postgres:
        condition: service_healthy
    ports:
      - 8080:8080

secrets:
  db_password:
    file: ./secrets/db_password.txt

volumes:
  pgdata:
  redis_data:
